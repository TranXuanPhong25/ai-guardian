#!/usr/bin/env python3
"""
Script t·∫°o d·ªØ li·ªáu test CSV v·ªõi PII cho vi·ªác ƒë√°nh gi√° hi·ªáu su·∫•t
T·∫°o file CSV v·ªõi format nh∆∞ y√™u c·∫ßu v√† c√≥ ch·ª©a c√°c lo·∫°i PII kh√°c nhau
"""

import csv
import random
from datetime import datetime, timedelta
from faker import Faker


def generate_test_csv(filename: str = "test_data_with_pii.csv", num_records: int = 1000):
    """
    T·∫°o file CSV test v·ªõi PII theo format y√™u c·∫ßu
    """
    fake = Faker(['en_US', 'vi_VN'])
    
    # Header nh∆∞ trong v√≠ d·ª•
    fieldnames = ['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate', 'UnitPrice', 'CustomerID', 'Country']
    
    # Th√™m th√™m m·ªôt s·ªë field c√≥ th·ªÉ ch·ª©a PII
    extended_fieldnames = fieldnames + ['CustomerName', 'CustomerEmail', 'CustomerPhone', 'Notes']
    
    print(f"Generating {num_records} records...")
    
    with open(filename, 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=extended_fieldnames)
        writer.writeheader()
        
        for i in range(num_records):
            # Base data theo format g·ªëc
            record = {
                'InvoiceNo': 536365 + i,
                'StockCode': f"P{random.randint(1000, 9999)}",
                'Description': random.choice(['LIKE', 'PRESENT', 'GIFT', 'ITEM', 'PRODUCT', 'BOOK', 'TOY']),
                'Quantity': random.randint(1, 50),
                'InvoiceDate': fake.date_time_between(start_date='-1y', end_date='now').strftime('%Y-%m-%d %H:%M:%S'),
                'UnitPrice': round(random.uniform(1.0, 100.0), 2),
                'CustomerID': random.randint(10000, 99999),
                'Country': fake.country()
            }
            
            # Th√™m PII v√†o c√°c field m·ªü r·ªông v·ªõi x√°c su·∫•t kh√°c nhau
            
            # 40% chance c√≥ t√™n kh√°ch h√†ng
            if random.random() < 0.4:
                record['CustomerName'] = fake.name()
            else:
                record['CustomerName'] = ''
            
            # 30% chance c√≥ email
            if random.random() < 0.3:
                record['CustomerEmail'] = fake.email()
            else:
                record['CustomerEmail'] = ''
            
            # 25% chance c√≥ s·ªë ƒëi·ªán tho·∫°i
            if random.random() < 0.25:
                record['CustomerPhone'] = fake.phone_number()
            else:
                record['CustomerPhone'] = ''
            
            # 20% chance c√≥ notes v·ªõi PII mixed
            if random.random() < 0.2:
                notes_parts = []
                
                # C√≥ th·ªÉ ch·ª©a t√™n ng∆∞·ªùi
                if random.random() < 0.5:
                    notes_parts.append(f"Contact: {fake.name()}")
                
                # C√≥ th·ªÉ ch·ª©a s·ªë th·∫ª t√≠n d·ª•ng
                if random.random() < 0.3:
                    notes_parts.append(f"Card ending: ****{fake.credit_card_number()[-4:]}")
                
                # C√≥ th·ªÉ ch·ª©a ƒë·ªãa ch·ªâ
                if random.random() < 0.4:
                    notes_parts.append(f"Ship to: {fake.address().replace('\n', ', ')}")
                
                # C√≥ th·ªÉ ch·ª©a SSN
                if random.random() < 0.1:
                    notes_parts.append(f"SSN: {fake.ssn()}")
                
                record['Notes'] = " | ".join(notes_parts) if notes_parts else "Standard order"
            else:
                record['Notes'] = ''
            
            # ƒê√¥i khi th√™m PII v√†o Description
            if random.random() < 0.15:
                record['Description'] = f"{record['Description']} for {fake.first_name()}"
            
            writer.writerow(record)
    
    print(f"‚úÖ Test data saved to {filename}")
    print(f"üìä Generated {num_records} records with mixed PII data")
    

def generate_simple_csv(filename: str = "simple_test_data.csv", num_records: int = 100):
    """
    T·∫°o file CSV ƒë∆°n gi·∫£n theo ƒë√∫ng format v√≠ d·ª•
    """
    fake = Faker()
    
    print(f"Generating {num_records} simple records...")
    
    with open(filename, 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.writer(csvfile)
        
        # Header theo v√≠ d·ª•
        writer.writerow(['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate', 'UnitPrice', 'CustomerID', 'Country'])
        
        for i in range(num_records):
            row = [
                536365 + i,
                f"P{random.randint(1000, 9999)}",
                random.choice(['LIKE', 'PRESENT', 'GIFT', 'ITEM']),
                random.randint(1, 50),
                fake.date_time_between(start_date='-1y', end_date='now').strftime('%Y-%m-%d %H:%M:%S'),
                round(random.uniform(1.0, 100.0), 2),
                random.randint(10000, 99999),
                fake.country()
            ]
            writer.writerow(row)
    
    print(f"‚úÖ Simple test data saved to {filename}")


if __name__ == "__main__":
    print("üîß CSV Test Data Generator")
    print("=" * 50)
    
    # T·∫°o file CSV ƒë∆°n gi·∫£n theo format v√≠ d·ª•
    generate_simple_csv("simple_test_data.csv", 100)
    
    print()
    
    # T·∫°o file CSV ph·ª©c t·∫°p v·ªõi nhi·ªÅu PII
    generate_test_csv("complex_test_data_with_pii.csv", 500)
    
    print("\nüéØ Generated test files:")
    print("  - simple_test_data.csv: Basic format as example")
    print("  - complex_test_data_with_pii.csv: Extended format with PII data")
